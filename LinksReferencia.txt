Manual da Microsoft para APIs Rest
https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md

Iniciando Requisições HTTP (artigo)
https://docs.microsoft.com/en-us/aspnet/core/fundamentals/http-requests

Classe HttpClient (referência)
https://docs.microsoft.com/pt-br/dotnet/api/system.net.http.httpclient

Paralelismo com C# na Alura
https://www.alura.com.br/curso-online-csharp-paralelismo-no-mundo-real

Sobre a convenção de finalizar nomes de métodos com o sufixo Async
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/async/#BKMK_NamingConvention

MultiparFormDataContent (referência)
https://docs.microsoft.com/pt-br/dotnet/api/system.net.http.multipartformdatacontent

Cookie Authentication
https://docs.microsoft.com/en-us/aspnet/core/security/authentication/cookie

Como utilizar IHttpContextAccessor
https://www.strathweb.com/2016/12/accessing-httpcontext-outside-of-framework-components-in-asp-net-core/

Anúncio da MS indicando que o objeto para acessar o contexto Http não será mais injetado por padrão
https://github.com/aspnet/Hosting/issues/793

Microsoft Rest API GuideLine
https://github.com/microsoft/api-guidelines

Break Changes definition
https://github.com/microsoft/api-guidelines/blob/vNext/Guidelines.md#123-definition-of-a-breaking-change

Motivos para não versionar via HARDCODE no atributo Route
	Permitir uma versão default caso o cliente não forneça a versão desejada
	Permitir que determinado controlador suporte mais de uma versão
	Suportar mais de um mecanismo de versionamento (que são no caminho da URL, via query string, media type e cabeçalho)
	Indicar que determinada versão vai sair de suporte (o famoso deprecated)
	Indicar que um endpoint é neutro, ou seja, suporta qualquer versão
	Obter via código que versão foi solicitada

Tópico sobre versionamento de APIs no Manual da Microsoft
https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#12-versioning

Artigo de Scott Hanselman sobre o assunto https://www.hanselman.com/blog/ASPNETCoreRESTfulWebAPIVersioningMadeEasy.aspx
Repositório e documentação do pacote AspNet Api Versioning
https://github.com/Microsoft/aspnet-api-versioning

Parte do manual da MS que fala sobre coleções com muitos dados
https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#94-big-collections

Artigos que implementam essas soluções e pelos quais me baseei
Paginação: https://tahirnaushad.com/2017/09/01/paging-in-asp-net-core-2-0-web-api/
Ordenação: https://tahirnaushad.com/2017/09/01/sorting-in-asp-net-core-2-0-web-api/
Filtro: https://tahirnaushad.com/2017/09/01/filtering-in-asp-net-core-2-0-web-api/

Tópico sobre erros no guideline da MS
https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#51-errors

Documentação sobre filtros no AspNet Core
https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/filters

Filtro de ModelState Invalid nos ApiControllers e como desabilitar
http://www.talkingdotnet.com/disable-automatic-model-state-validation-in-asp-net-core-2-1/